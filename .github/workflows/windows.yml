name: windows-build
on:
  push:
    branches: [main]
    paths: [wireshark/*, wireshark/source/*, wireshark/build-scripts/*, .github/workflows/*]
  workflow_dispatch:

jobs:
  wireshark-windows:
    name: build
    runs-on: windows-2022
    env:
      PLATFORM: x64
      WIRESHARK_BASE_DIR: C:\Development
      CMAKE_PREFIX_PATH: D:\a\ja4\Qt\6.2.3\msvc2019_64
      WIRESHARK_VERSION_EXTRA: -GithubActionBuild
    steps:
      - name: checkout this repo
        uses: actions/checkout@v4

      - name: create wireshark directory
        run: mkdir wireshark/build-scripts/wireshark

      - name: checkout wireshark
        uses: actions/checkout@v4
        with:
          repository: wireshark/wireshark
          ref: release-4.4
          path: wireshark/build-scripts/wireshark

      - name: add ja4 plugin
        run: copy -r wireshark/source wireshark/build-scripts/wireshark/plugins/epan/ja4

      - name: Choco install dependencies
        run: choco install -y asciidoctorj xsltproc docbook-bundle nsis winflexbison3 cmake
      - name: Install strawberryperl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: '5.30'
          distribution: strawberry

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          arch: win64_msvc2019_64
          version: 6.2.3
          modules: 'qt5compat'

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: 16.8

      - name: Mkdir build directory and copy sources
        run: mkdir wireshark/build-scripts/wireshark/build 

      - name: Cmake
        run: cd wireshark/build-scripts/wireshark/build && cmake -DCUSTOM_PLUGIN_SRC_DIR=plugins/epan/ja4 -DCMAKE_SYSTEM_VERSION="10.0.20348.0" -A x64 ..
        env:
          PLATFORM: x64
          WIRESHARK_BASE_DIR: C:/wireshark-libs
          QT5_BASE_DIR: C:/Qt/5.12.3/msvc2017_64
          working-directory: wireshark/build-scripts/wireshark/build
      - name: Build
        run: cd wireshark/build-scripts/wireshark/build && cmake --build . --config RelWithDebInfo
        working-directory: wireshark/build-scripts/wireshark/build

